/* 
 * Clever API
 *
 * The Clever API
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Clever.Api;
using Clever.Model;
using Clever.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Clever.Test
{
    /// <summary>
    ///  Class for testing ModelEvent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ModelEventTests
    {
        // TODO uncomment below to declare an instance variable for ModelEvent
        //private ModelEvent instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ModelEvent
            //instance = new ModelEvent();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelEvent
        /// </summary>
        [Test]
        public void ModelEventInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ModelEvent
            //Assert.IsInstanceOfType<ModelEvent> (instance, "variable 'instance' is a ModelEvent");
        }

        /// <summary>
        /// Test deserialize a TeachersDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void TeachersDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TeachersDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TeachersDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TermsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void TermsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TermsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TermsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchoolsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void SchoolsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchoolsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchoolsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TermsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void TermsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TermsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TermsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchooladminsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void SchooladminsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchooladminsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchooladminsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a CoursesUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void CoursesUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a CoursesUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new CoursesUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchooladminsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void SchooladminsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchooladminsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchooladminsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TermsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void TermsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TermsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TermsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a CoursesDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void CoursesDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a CoursesDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new CoursesDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SectionsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void SectionsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SectionsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SectionsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchooladminsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void SchooladminsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchooladminsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchooladminsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ContactsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void ContactsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a ContactsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new ContactsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SectionsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void SectionsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SectionsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SectionsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a StudentsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void StudentsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a StudentsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new StudentsDeleted().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchoolsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void SchoolsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchoolsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchoolsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SchoolsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void SchoolsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SchoolsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SchoolsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SectionsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void SectionsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a SectionsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new SectionsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ContactsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void ContactsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a ContactsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new ContactsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictadminsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictadminsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictadminsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictadminsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a StudentsUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void StudentsUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a StudentsUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new StudentsUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a CoursesCreated from type ModelEvent
        /// </summary>
        [Test]
        public void CoursesCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a CoursesCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new CoursesCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictadminsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictadminsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictadminsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictadminsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TeachersCreated from type ModelEvent
        /// </summary>
        [Test]
        public void TeachersCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TeachersCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TeachersCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ContactsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void ContactsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a ContactsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new ContactsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a TeachersUpdated from type ModelEvent
        /// </summary>
        [Test]
        public void TeachersUpdatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a TeachersUpdated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new TeachersUpdated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a StudentsCreated from type ModelEvent
        /// </summary>
        [Test]
        public void StudentsCreatedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a StudentsCreated from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new StudentsCreated().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DistrictadminsDeleted from type ModelEvent
        /// </summary>
        [Test]
        public void DistrictadminsDeletedDeserializeFromModelEventTest()
        {
            // TODO uncomment below to test deserialize a DistrictadminsDeleted from type ModelEvent
            //Assert.IsInstanceOf<ModelEvent>(JsonConvert.DeserializeObject<ModelEvent>(new DistrictadminsDeleted().ToJson()));
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
